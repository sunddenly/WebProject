<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd     
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	    
	    <!-- 数据库配置 -->
		<util:properties id="db" location="classpath:com/netctoss/config/db.properties"/>
		<bean name="mydatasource" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="url">
				<value>#{db.url}</value>
			</property>
			<property name="driverClassName">
				<value>#{db.driver}</value>
			</property>
			<property name="username">
				<value>#{db.username}</value>
			</property>
			<property name="password">
				<value>#{db.password}</value>
			</property>
		</bean>

		<!-- 在Spring容器生成一个sqlSessionFactoryBean对象 -->
		<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="mydatasource"/>
			<property name="mapperLocations" value="classpath:com/netctoss/entity/*.xml"/>
		</bean>
		<!-- 使用MapperScannerConfigurer批量生成映射器 -->
		<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.netctoss.dao" />
			<property name="annotationClass" value="com.netctoss.util.MyBatisDao"/>
		</bean>
		
		<!-- SpringMVC 配置 -->
		<context:component-scan base-package="com.netctoss"/>
		<mvc:annotation-driven/>
		<!-- 将拦截的静态资源js,css等放过去 -->
		<mvc:default-servlet-handler/>
		<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<property name="prefix"  value="/WEB-INF/jsp/"/>
			<property name="suffix"  value=".jsp"/>
		</bean>
		<!-- 事务控制 -->
		<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="mydatasource"/>
		</bean>
		<!-- 为了支持@Transactional -->
		<tx:annotation-driven transaction-manager="txManager"/>
</beans>